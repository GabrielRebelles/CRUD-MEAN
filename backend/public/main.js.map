{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/employee.service.ts","./src/app/components/employee/employee.component.html","./src/app/components/employee/employee.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Employees</a>\n  </div>\n</nav>\n<div class=\"container p-4\">\n\n  <app-employee></app-employee>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Employee } from '../models/employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  URL_API=location.href+\"api/employees\"\n  selectedEmployee : Employee={\n    name:'',\n    office:'',\n    position:'',\n    salary:null,\n  }\n  employees : Employee[]//arreglo con objetos de tipo Employee\n  \n  constructor(public http: HttpClient){}\n\n  getEmployees(){\n    //esto va a obtener un arreglo de empleados\n    return this.http.get<Employee[]>(this.URL_API)\n  }\n\n  createEmployee(employee:Employee){\n    return this.http.post(this.URL_API,employee)\n  }\n  \n  deleteEmployee(_id:string){\n    return this.http.delete(`${this.URL_API}/${_id}`)\n  }\n  \n  updateEmployee(employee:Employee){\n    return this.http.put(`${this.URL_API}/${employee._id}`,employee)\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <!-- La func addEmployee recibe todo el form como parametro -->\n                <form #employeeForm=\"ngForm\" (ngSubmit)=\"addEmployee(employeeForm)\">\n                    <!-- El [(ngModel)] es para vincular el input al selectedEmployee -->\n                    <input type=\"hidden\" name=\"_id\" [(ngModel)]=\"employeeService.selectedEmployee._id\">\n\n                    <div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"employeeService.selectedEmployee.name\" name=\"name\" class=\"form-control\" placeholder=\"Enter your Fullname\">\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"employeeService.selectedEmployee.position\" name=\"position\" class=\"form-control\" placeholder=\"Enter your Position\">\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"employeeService.selectedEmployee.office\" name=\"office\" class=\"form-control\" placeholder=\"Enter your Office\">\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"number\" [(ngModel)]=\"employeeService.selectedEmployee.salary\" name=\"salary\" class=\"form-control\" placeholder=\"Enter your Salary\">\n                    </div>\n                    <button class=\"btn btn-primary mr-2\" (click)=\"resetForm(employeeForm)\" >Clean</button>\n                    <button class=\"btn btn-secondary\">Save</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-8\">\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Position</th>\n                    <th>Office</th>\n                    <th>Operations</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let employee of employeeService.employees\">\n                    <td>{{employee.name}}</td>\n                    <td>{{employee.position}}</td>\n                    <td>{{employee.office}}</td>\n                    <td>\n                        <button class=\"btn btn-secondary btn-sm mr-2\" (click)=\"editEmployee(employee)\">\n                            <i class=\"material-icons\">edit</i>\n                        </button>\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"deleteEmployee(employee._id)\" >\n                            <i class=\"material-icons\">delete</i>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {EmployeeService} from \"../../services/employee.service\"\nimport {NgForm} from \"@angular/forms\"\nimport { Employee } from 'src/app/models/employee';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  //utilizo instancia employeService que viene de la clase EmployeeService\n  //con esto puedo utilizar los metodos que defini en la clase EmployeeService\n  constructor(public employeeService: EmployeeService) { }\n\n  //cuando cargue:\n  ngOnInit(): void {\n    this.getEmployees()\n  }\n\n  resetForm(form:NgForm){\n    form.reset()\n  }\n\n\n  getEmployees(){    \n    this.employeeService.getEmployees().subscribe(\n      res=>{\n        this.employeeService.employees=res\n      },\n      err=>console.error(err)\n    )\n  }\n\n  addEmployee(form:NgForm){\n    if (form.value._id) {\n      this.employeeService.updateEmployee(form.value).subscribe(\n        res=>{\n          this.getEmployees()\n          form.reset()\n        },\n        err=>{\n          console.log(err)          \n          this.getEmployees()\n          form.reset()\n        }\n      )\n    }else{      \n      this.employeeService.createEmployee(form.value).subscribe(\n        res=>{\n          this.getEmployees()\n          form.reset()\n        },\n        err=>console.error(err)\n      )\n    }\n  }\n\n  deleteEmployee(_id:string){    \n    if (confirm(\"Are you sure you want to delet it?\")) {\n      this.employeeService.deleteEmployee(_id).subscribe(\n        res=>{\n          this.getEmployees()\n        },\n        err=>{\n          console.log(err)\n          this.getEmployees()\n        }\n        )\n    }\n  }\n\n  editEmployee(employee:Employee){\n    this.employeeService.selectedEmployee=employee\n  }\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}